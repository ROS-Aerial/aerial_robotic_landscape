{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Aerial Robotic Landscape This repository/website is a collection of resources for aerial robotics. It is intended to be a comprehensive list of recourses for anyone interested in aerial robotics. The resources are divided into categories, such as autonomy stacks, autopilot suites, simulation, message standards, safety and management systems, tutorials and education, hardware, components, and development kits, aerial vehicle types, and middleware and drivers. Contributions are welcomed This project is under active development and you can contribute to it, by submiting a PR with you changes or posting an issue to the repository in Github. Community This landscape is a community project, and we encourage readers to contribute to the landscape. The best way to contribute is to join our bi-weekly meetings, and/or add to the lists. The main repository for the Community Work Group Meetings The Aerial Robotics group meets bi-weekly on Wednesday's at 16:00 UTC. Meetings will be announced on the ROS Discourse Aerial Robotics forum category at least a week in advance, and recordings and meeting notes will be made available after each meeting. Team / Community Coordination Instant Messaging ROS Discord: under the #cwg-aerial Forums ROS Discourse Aerial Robotics Category Contributing Contributions to the landscape are highly encouraged, from simple fixes to spelling and grammer all the way to adding new sections to the landscape. Quick Changes in Github Simple changes to existing pages can be done by clicking the \"Edit on Github\" link that appears at the top of every page. To edit an existing page: 1. Open the page. 2. Click the Edit on Github link on top of the page. 3. Make the changes in the online editor. 4. Below the Github page editor you'll be prompted to create a separate branch and then guided to submit a pull request. Once you submit the team will review your change request and either provide feedback on how to improve or just merge it, resulting in the website getting updated. Changes using Git (New Pages and Images) More substantial changes, including adding new pages or adding/modifying images, aren't as easy to make (or properly test) on Github. For these kinds of changes we suggest using the same approach as for code: Use the git toolchain to get the documentation source code onto your local computer with git clone git@github.com:ROS-Aerial/aerial_robotic_landscape.git Modify the documentation as needed (add, change, delete). Test that it builds properly with mkdocs . Check out their documentation for building the website and trying the website locally. Create a branch for your changes and create a pull request (PR) to pull it back into the documentation.","title":"Aerial Robotic Landscape"},{"location":"#aerial-robotic-landscape","text":"This repository/website is a collection of resources for aerial robotics. It is intended to be a comprehensive list of recourses for anyone interested in aerial robotics. The resources are divided into categories, such as autonomy stacks, autopilot suites, simulation, message standards, safety and management systems, tutorials and education, hardware, components, and development kits, aerial vehicle types, and middleware and drivers. Contributions are welcomed This project is under active development and you can contribute to it, by submiting a PR with you changes or posting an issue to the repository in Github.","title":"Aerial Robotic Landscape"},{"location":"#community","text":"This landscape is a community project, and we encourage readers to contribute to the landscape. The best way to contribute is to join our bi-weekly meetings, and/or add to the lists. The main repository for the Community Work Group","title":"Community"},{"location":"#meetings","text":"The Aerial Robotics group meets bi-weekly on Wednesday's at 16:00 UTC. Meetings will be announced on the ROS Discourse Aerial Robotics forum category at least a week in advance, and recordings and meeting notes will be made available after each meeting.","title":"Meetings"},{"location":"#team-community-coordination","text":"Instant Messaging ROS Discord: under the #cwg-aerial Forums ROS Discourse Aerial Robotics Category","title":"Team / Community Coordination"},{"location":"#contributing","text":"Contributions to the landscape are highly encouraged, from simple fixes to spelling and grammer all the way to adding new sections to the landscape.","title":"Contributing"},{"location":"#quick-changes-in-github","text":"Simple changes to existing pages can be done by clicking the \"Edit on Github\" link that appears at the top of every page. To edit an existing page: 1. Open the page. 2. Click the Edit on Github link on top of the page. 3. Make the changes in the online editor. 4. Below the Github page editor you'll be prompted to create a separate branch and then guided to submit a pull request. Once you submit the team will review your change request and either provide feedback on how to improve or just merge it, resulting in the website getting updated.","title":"Quick Changes in Github"},{"location":"#changes-using-git-new-pages-and-images","text":"More substantial changes, including adding new pages or adding/modifying images, aren't as easy to make (or properly test) on Github. For these kinds of changes we suggest using the same approach as for code: Use the git toolchain to get the documentation source code onto your local computer with git clone git@github.com:ROS-Aerial/aerial_robotic_landscape.git Modify the documentation as needed (add, change, delete). Test that it builds properly with mkdocs . Check out their documentation for building the website and trying the website locally. Create a branch for your changes and create a pull request (PR) to pull it back into the documentation.","title":"Changes using Git (New Pages and Images)"},{"location":"aerial_autonomy_stacks/","text":"Aerial Autonomy Stacks Based on this discussion in Discourse and our startup meeting , we can define an aerial autonomy stack as follows: An aerial autonomy robotics stack is a collection of building blocks that enable the development of autonomous aerial vehicles, by providing a modular and scalable architecture for sensing, perception, planning, and control tasks. It allows unmanned aerial vehicles to perform complex missions without human intervention, while accommodating different hardware configurations and simulation environments. Comparison Adapted and appended from the paper: Fernandez-Cortizas, Miguel, et al. \"Aerostack2: A Software Framework for Developing Multi-robot Aerial Systems.\" arXiv preprint arXiv:2303.18237 (2023). the following autonomy stack table was extracted and adapted. Flight stack Middleware last update Aerostack(1) ROS 11/2021 Aerostack2 ROS 2 06/2025 Agilicious ROS 03/2023 KumarRobotics Autonomy Stack ROS 08/2023 CrazyChoir ROS 2 06/2025 UAL ROS 12/2022 XTDrone ROS 04/2025 RotorS ROS 07/2021 GAAS ROS 10/2021 MRS AUV System ROS 03/2025 Crazyswarm2 ROS 2 06/2025 Crazyswarm(1) ROS 12/2022 Table last updated on June 16th, 2025 at 02:53:23 AM UTC Other Autonomy stacks: Hector quadrotor Clover HKUST-Aerial-Robotics VIO packages Visual Inertial Odometry packages is an very important strategy of positioning within GPS deprived environments. Since UAVs can not use wheel odometry and heavily relient on cameras, this is one of the main drivers for autonomous exploration with these vehicles. Here is a list of VIO packages that people can use if they have a depth camera on their platform. OpenVins (ROS1/ROS2): VINS-Fusion stand alone SLAMcore stand alone SDK ORB-SLAM3 ROS2 Visual Odometry Datasets Kaggle Zurich Urban Micro Aerial Vehicle Kaggle Underwater forward-looking VI dataset The Air Lab Datasets The UZH FPV Dataset Partial autonomy packages A list of packages which don't comprise a full stack but do offer value on top of basic flight controller firmware. MAVROS Controllers Indoor navigation packages Given the above Aerial Autonomy Stacks , the list below outlines specific implementations of indoor navigation software packages in ROS, running on aerial vehicle platforms. The list, though not exhaustive, provides a good overview of available off-the-shelf non-commercial software. Package name OS/OC Sensors required Middleware Simulator Platform/controller Last updated Ardupilot ROS \u2713 LiDAR ROS 2 Gazebo Iris coptor,Ardupilot 03/2025 as2_behaviour_tree \u2713 Unknown ROS 2 Gazebo Crazyflie,DJI,Tello 06/2025 Teach-Repeat-Replan \u2713 Stereo camera ROS 1 MockaFly DJI N3 10/2021 rtabmap \u2713 Stereo camera ROS 1 Gazebo PX4 12/2024 ORB_SLAM_3 \u2713 Mono/stereo camera ROS 1 N/A Bebop 2 06/2025 relative_nav \u2717 Stereo camera ROS 1 N/A Rotorcraft 04/2017 zephyr \u2713 LiDAR ROS 1 RotorS/Gazebo AscTec Firefly 11/2018 tum_ardrone \u2713 Mono camera ROS 1 N/A AR.Drone 05/2014 kr_autonomous_flight \u2713 Stereo camera/LiDAR/IMU ROS 1 Gazebo Pixhawk 08/2023 px4_sim_ros2 \u2713 Stereo camera ROS 2 Gazebo PX4 06/2025 pidrone_pkg \u2713 Mono camera/IR ROS 1 N/A Duckiedrone 05/2024 Table last updated on June 16th, 2025 at 02:53:23 AM UTC","title":"Aerial Autonomy Stacks"},{"location":"aerial_autonomy_stacks/#aerial-autonomy-stacks","text":"Based on this discussion in Discourse and our startup meeting , we can define an aerial autonomy stack as follows: An aerial autonomy robotics stack is a collection of building blocks that enable the development of autonomous aerial vehicles, by providing a modular and scalable architecture for sensing, perception, planning, and control tasks. It allows unmanned aerial vehicles to perform complex missions without human intervention, while accommodating different hardware configurations and simulation environments.","title":"Aerial Autonomy Stacks"},{"location":"aerial_autonomy_stacks/#comparison","text":"Adapted and appended from the paper: Fernandez-Cortizas, Miguel, et al. \"Aerostack2: A Software Framework for Developing Multi-robot Aerial Systems.\" arXiv preprint arXiv:2303.18237 (2023). the following autonomy stack table was extracted and adapted. Flight stack Middleware last update Aerostack(1) ROS 11/2021 Aerostack2 ROS 2 06/2025 Agilicious ROS 03/2023 KumarRobotics Autonomy Stack ROS 08/2023 CrazyChoir ROS 2 06/2025 UAL ROS 12/2022 XTDrone ROS 04/2025 RotorS ROS 07/2021 GAAS ROS 10/2021 MRS AUV System ROS 03/2025 Crazyswarm2 ROS 2 06/2025 Crazyswarm(1) ROS 12/2022 Table last updated on June 16th, 2025 at 02:53:23 AM UTC Other Autonomy stacks: Hector quadrotor Clover HKUST-Aerial-Robotics","title":"Comparison"},{"location":"aerial_autonomy_stacks/#vio-packages","text":"Visual Inertial Odometry packages is an very important strategy of positioning within GPS deprived environments. Since UAVs can not use wheel odometry and heavily relient on cameras, this is one of the main drivers for autonomous exploration with these vehicles. Here is a list of VIO packages that people can use if they have a depth camera on their platform. OpenVins (ROS1/ROS2): VINS-Fusion stand alone SLAMcore stand alone SDK ORB-SLAM3 ROS2","title":"VIO packages"},{"location":"aerial_autonomy_stacks/#visual-odometry-datasets","text":"Kaggle Zurich Urban Micro Aerial Vehicle Kaggle Underwater forward-looking VI dataset The Air Lab Datasets The UZH FPV Dataset","title":"Visual Odometry Datasets"},{"location":"aerial_autonomy_stacks/#partial-autonomy-packages","text":"A list of packages which don't comprise a full stack but do offer value on top of basic flight controller firmware. MAVROS Controllers","title":"Partial autonomy packages"},{"location":"aerial_autonomy_stacks/#indoor-navigation-packages","text":"Given the above Aerial Autonomy Stacks , the list below outlines specific implementations of indoor navigation software packages in ROS, running on aerial vehicle platforms. The list, though not exhaustive, provides a good overview of available off-the-shelf non-commercial software. Package name OS/OC Sensors required Middleware Simulator Platform/controller Last updated Ardupilot ROS \u2713 LiDAR ROS 2 Gazebo Iris coptor,Ardupilot 03/2025 as2_behaviour_tree \u2713 Unknown ROS 2 Gazebo Crazyflie,DJI,Tello 06/2025 Teach-Repeat-Replan \u2713 Stereo camera ROS 1 MockaFly DJI N3 10/2021 rtabmap \u2713 Stereo camera ROS 1 Gazebo PX4 12/2024 ORB_SLAM_3 \u2713 Mono/stereo camera ROS 1 N/A Bebop 2 06/2025 relative_nav \u2717 Stereo camera ROS 1 N/A Rotorcraft 04/2017 zephyr \u2713 LiDAR ROS 1 RotorS/Gazebo AscTec Firefly 11/2018 tum_ardrone \u2713 Mono camera ROS 1 N/A AR.Drone 05/2014 kr_autonomous_flight \u2713 Stereo camera/LiDAR/IMU ROS 1 Gazebo Pixhawk 08/2023 px4_sim_ros2 \u2713 Stereo camera ROS 2 Gazebo PX4 06/2025 pidrone_pkg \u2713 Mono camera/IR ROS 1 N/A Duckiedrone 05/2024 Table last updated on June 16th, 2025 at 02:53:23 AM UTC","title":"Indoor navigation packages"},{"location":"aerial_vehicles/","text":"Aerial Vehicle Types and Categories Usually, people tend to think about quadcopters when talking about aerial robotics, but there is actually a much larger variety of vehicle types available! Here's an attempt to list all of them if we can. Copters Copters are aerial vehicles that use motors and propellers for their lift and maneuverability in 3D space. These usually are categorized into the following subcategories: Quadcopters: The most common aerial vehicle used. It is driven by (as the name already indicates) 4 propellers and 4 motors. Helicopters: Like manned helicopters, unmanned helicopters are driven by one main rotor on top and one smaller one on the side for stability and maneuverability. Hexacopters/Octocopters: Copters with 6 or 8 rotors/motor combinations, respectively. Tilt-Rotor Copters: Copters that have motor and rotor combos that can change orientation. Monocopters: Monocopters are copters that are only driven by a single rotor and motor combo. Fixed Wing Fixed-wing aerial vehicles use fixed wings for takeoff lift and control. These are the subcategories: Regular Fixed Wings: Like regular airplanes, fixed-wing UAVs have 2 wings with a form of propulsion. Hybrid / VTOL: These vehicles can take off like a quadcopter vertically but can transition and act like a fixed-wing vehicle for the remainder of the flight. Gliding UAVs: These are fixed-wing UAVs without any propulsion and are therefore reliant on wind and thermal currents. Flapping Wing Flapping-wing aerial vehicles generate both lift and thrust by their flapping wings. There are two main subcategories: Ornithopters: These are the traditional bird-like flapping-wing UAVs. The flapping wings generate lift and thrust and an airplane-like tail with traditional control surfaces is used for stbility and flight control. Some minimal forward velocity needs to be maintained such the wings produce sufficient lift. Only some smaller vehicles demonstrate limited VTOL and hovering capability. These vehicles can be passively stabilized by the tail surfaces and do not require active stabilization, similar to fixed-wing UAVs. Tail-less flapping-wing UAVs: These vehicles fly like insects and hummingbirds - they can hover, take-off and land vertically, and fly in any direction (forward & backward, sideways, up & down). Lift/thrust is generated by the flapping wings, whose geometry and/or motion is adjustable for flight control. Like multicopters, these vehicles require active stabilization, typically by using an onboard IMU. Blimps Blimps or airships can also be used as aerial vehicles as well. These vehicles stay buoyant by using a balloon with lighter-than-air gas. Maneuverability is either done with flapping wings or rotors. List to support vehicles per autopilot suite Each autopilot suite have their a wide range of supported vehicles, to which this itemized list is referenced to. Note that these lists also include non-aerial vehicles as well. Ardupilot Paparazzi PX4 Autopilot Crazyflie This page was last updated: April 18, 2025","title":"Aerial Vehicle Types and Categories"},{"location":"aerial_vehicles/#aerial-vehicle-types-and-categories","text":"Usually, people tend to think about quadcopters when talking about aerial robotics, but there is actually a much larger variety of vehicle types available! Here's an attempt to list all of them if we can.","title":"Aerial Vehicle Types and Categories"},{"location":"aerial_vehicles/#copters","text":"Copters are aerial vehicles that use motors and propellers for their lift and maneuverability in 3D space. These usually are categorized into the following subcategories: Quadcopters: The most common aerial vehicle used. It is driven by (as the name already indicates) 4 propellers and 4 motors. Helicopters: Like manned helicopters, unmanned helicopters are driven by one main rotor on top and one smaller one on the side for stability and maneuverability. Hexacopters/Octocopters: Copters with 6 or 8 rotors/motor combinations, respectively. Tilt-Rotor Copters: Copters that have motor and rotor combos that can change orientation. Monocopters: Monocopters are copters that are only driven by a single rotor and motor combo.","title":"Copters"},{"location":"aerial_vehicles/#fixed-wing","text":"Fixed-wing aerial vehicles use fixed wings for takeoff lift and control. These are the subcategories: Regular Fixed Wings: Like regular airplanes, fixed-wing UAVs have 2 wings with a form of propulsion. Hybrid / VTOL: These vehicles can take off like a quadcopter vertically but can transition and act like a fixed-wing vehicle for the remainder of the flight. Gliding UAVs: These are fixed-wing UAVs without any propulsion and are therefore reliant on wind and thermal currents.","title":"Fixed Wing"},{"location":"aerial_vehicles/#flapping-wing","text":"Flapping-wing aerial vehicles generate both lift and thrust by their flapping wings. There are two main subcategories: Ornithopters: These are the traditional bird-like flapping-wing UAVs. The flapping wings generate lift and thrust and an airplane-like tail with traditional control surfaces is used for stbility and flight control. Some minimal forward velocity needs to be maintained such the wings produce sufficient lift. Only some smaller vehicles demonstrate limited VTOL and hovering capability. These vehicles can be passively stabilized by the tail surfaces and do not require active stabilization, similar to fixed-wing UAVs. Tail-less flapping-wing UAVs: These vehicles fly like insects and hummingbirds - they can hover, take-off and land vertically, and fly in any direction (forward & backward, sideways, up & down). Lift/thrust is generated by the flapping wings, whose geometry and/or motion is adjustable for flight control. Like multicopters, these vehicles require active stabilization, typically by using an onboard IMU.","title":"Flapping Wing"},{"location":"aerial_vehicles/#blimps","text":"Blimps or airships can also be used as aerial vehicles as well. These vehicles stay buoyant by using a balloon with lighter-than-air gas. Maneuverability is either done with flapping wings or rotors.","title":"Blimps"},{"location":"aerial_vehicles/#list-to-support-vehicles-per-autopilot-suite","text":"Each autopilot suite have their a wide range of supported vehicles, to which this itemized list is referenced to. Note that these lists also include non-aerial vehicles as well. Ardupilot Paparazzi PX4 Autopilot Crazyflie This page was last updated: April 18, 2025","title":"List to support vehicles per autopilot suite"},{"location":"education_and_tutorial/","text":"Education and tutorials This page will contain a list of education courses or tutorials for aerial robotics. This is a partly compilation of this ROS discourse thread and the May meeting about tutorials and education and some googling :) This also includes input from a Linkedin post for a call of suggestions. This has been an adaption from the following Bitcraze Blogpost , and the overview presentation done for the ROS-aerial CWG meetings Books Small Unmanned Aircraft: Theory and Practice There is this important resource which is the book titled \u2018Small Unmanned Aircraft: Theory and Practice. (2012)\u2019 This book has been written by Randy Beard and Tim McLain of Brigham Young University, and it covers everything from the absolute basics of coordinate frames and quadrotor dynamics to path planning and cameras. It is a must-read for anybody starting in UAVs and Aerial robotics. Year published: 2012 The physical book can be found here: http://press.princeton.edu/titles/9632.html *The available PDFs can be accessed on GitHub: https://github.com/randybeard/uavbook Summer schools IEEE RAS summer school on Multi-robot Systems There is an in-person IEEE RAS summer school on Multi-robot Systems organized by the Czech Technical University of Prague. It has been organized for over 5 summers and they use real aerial robotic platforms for their practicals with students, along with gettting lessons of both UAV and multi-robot experts. A summer school to not miss if you'd like to get started in the world of aerial robotics! Date: Summer 2025 Link: https://mrs.fel.cvut.cz/summer-school-2025/ Drone Summer School at the SDU UAS Center The University of Soutern Denmark has their yearly Drone Summer School at the SDU UAS Center . Here you will learn to construct and fly drones focused around computer-vision. There will be team formation where the drone is build and where it can be flown outside in their huge UAS Denmark test center. Date: Summer 2025 Link: https://www.sdu.dk/en/forskning/sduuascenter/education/drone-summer-school/ University Specialization in in Aerial Robotics Bachelors in Aerial robotics If you are fully committed to pursuing a career in aerial robotics, both Embry-Riddle Aeronautical University and the University of North Dakota offer full bachelor\u2019s majors in becoming a UAV engineer. Link Embry-Riddle Aeronautical University: https://erau.edu/degrees/bachelor/unmanned-aircraft-systems Link University of North Dakota: https://und.edu/programs/unmanned-aircraft-system-operations-bs-aero/ Masters in Aerial robotics If you have already done your bachelors in a different engineering major, or if you just want to learn, The University of Soutern Denmark offers a Drone and Autonomous Systems specialization for their master programmes in Robots Systems. Link: https://www.sdu.dk/en/uddannelse/kandidat/robotteknologi/uddannelsens_opbygning/drone/ Online Courses on Aerial Robotics This section shows online courses for aerial robotics with online instructor. Udacity: Flying car nano degree Udacity has been offering a course on Aerial Vehicles for quite some time for the Flying car nano degree . The lessons are taught by top names in the industry and cover key aspects of Aerial Robotics, such as motion planning, controls, and estimation, with lab assignments involving a real drone. The course duration is 4 months, and access is available for a fee. Year last updated: 2025 Link: https://www.udacity.com/course/flying-car-nanodegree--nd787 Udamy: Applied Control System 3: UAV Drone (3D Dynamics & Control) Additionally, there\u2019s the course \u2018Applied Control System 3: UAV Drone (3D Dynamics & Control)\u2019 which is part of a series by Mark Misin. This course delves deep into the dynamics, control, and modeling of quadrotors. Year last updated: 2025 Link: https://www.udemy.com/course/applied-control-systems-for-engineers-2-uav-drone-control/ University courses on Aerial Robotics with open resources This section showes university courses that have released recordings of lectures, slides and/or assignments. For instructions participants would need to follow the actual course at that one university. Brown Uni's Introduction to Robotics Brown University offers a course called \u2018Introduction to Robotics\u2019 taught by Prof. Stefanie Tellix. While the introduction covers generic robotics, the focus of the full course is on building and programming the Duckiedrone . The course dives straight into autonomy and also teaches students how to work with ROS . Year last updated: 2023 Link: https://cs.brown.edu/courses/cs1951r/ Uni. of Washington's Introduction to Robotics The \u2018Bio-inspired Robotics\u2019 course at the University of Washington, led by Prof. Sawyer Fuller, explores the realm of drawing inspiration from nature rather than reinventing the wheel. It covers various robots inspired by creatures capable of swimming, walking, hopping, and of course, flying. Lab assignments in this course involve working with a Crazyflie drone. Year last updated: 2023 Link: https://faculty.washington.edu/minster/bio_inspired_robotics/ Princeton's Intro to Robotics Princeton University have also decided to release their \u2018Intro to Robotics\u2019 lectures (recordings and slides) and materials for the public. It covers all from control and estimation, computer vision and planning. Also it offers lab assignments with the Crazyflie . Year last updated: 2022 Link: https://irom-lab.princeton.edu/intro-to-robotics/ MIT's Visual Navigation for Autonomous Vehicles (VNAV) MIT are offering a course on Visual Navigation for Autonomous Vehicles (VNAV) , making all the handouts, notes and slides availabie. This course is tought by Prof. Luca Carlone, and teaches about the theoratical theroy of visual navigation. It also covers the latest algorithms, like SLAM, detection and deep learning and which software packages to use, like ROS 2 and a Unity based simulator. Year last updated: 2022 Link: https://vnav.mit.edu/ Uni. of Maryland's Autonomous Aerial Robotics The University of Maryland offers a course on Autonomous Aerial Robotics , making all videos, slides, and assignments available. Taught by Nitin J. Sanket and Chahat Deep Singh, the course covers everything from basic control and dynamics to full autonomy. It\u2019s a comprehensive resource for aerial robotics. The course utilizes the Parrot Bebop 2.0 , and while a Mocap system is required, you may explore the possibility of adapting the course to a different platform. ROS is also part of this course Year last updated: 2019 Link: http://prg.cs.umd.edu/enae788m Youtube Youtube also has quite some tutorials available so this section highlights a few. DroneBlocks' Youtube channel DroneBlocks : This channel hosts educational content for robotics, it mainly focuses on aerial platforms such as DJI, CrazyFly, and PX4. Last video online: 2025 Link: https://www.youtube.com/@droneblocks PX4 Autopilot specific content Youtube channel PX4 Autopilot specific content : This channel is supported by the Dronecode Foundation and is the official PX4 Autopilot channel, you can expect video recordings from Dronecode/PX4 events, and tutorials/guides from any open source project hosted under the Dronecode umbrella. Last video online: 2025 Link: https://www.youtube.com/@px4autopilot Intelligent Quads YouTube Channel Intelligent Quads YouTube Channel : This channel is entirely dedicated to creating autonomous UAVs, covering topics from Ardupilot to MAVlink to ROS and Gazebo. It appears to be a valuable resource for beginners in the field of autonomous UAVs. This also includes ROS as part of the lessons as well. Last video online: 2023 Link: https://www.youtube.com/@IntelligentQuads carbonaeronautics Youtube channel carbonaeronautics : This channel will guide you every step of the way, explaining the essentials on aeronautics, electronics and embedded programming. All components are commercially available and all programs are fully hackable, meaning that you can adapt anything you want and create a quadcopter capable of stuff that goes way beyond the scope of this manual! Last video online: 2023 Link: https://www.youtube.com/@carbonaeronautics Drone Programming with Python (2021) Youtube video Drone Programming with Python (2021) : This popular tutorial/course teaches viewers how to program a real drone using Python with the DJI Tello . It offers a great opportunity for anyone looking for a short and enjoyable project to undertake, especially on a rainy day, while still working with a real platform. Link: https://youtu.be/LmEcyQnfpDA Code Examples Here are some code examples that can be used as reference for experiments. Mambo ROS Examples Mambo ROS Examples: This is a collection of experiments targeted Parrot Mambo drones, there are experiments with one or multiple vehicles at the same time. It runs over ROS over BLE, and some test are adapted to make use of a Vicon MoCap system. From a control theory's perspective, it showcases an optional robust control strategy, using an H-Infinity controller with perturbation estimation and a identified dynamic model of a Parrot Mambo drone. Last updated commit: 2023 Link: https://github.com/TOTON95/Mambo_ROS_Examples Some special mentions So here there are some courses that either doesn't fit in the above categories or are deprecated. University of Twente UAV Centre: The University of Twente has created a portal with a variety of UAV-related courses. You can find a wealth of information and educational materials on their website. Link: https://www.itc.nl/facilities/centres-of-expertise/uav-centre/ Self-Driving Car Specialization: If you are interested in learning more about SLAM (Simultaneous Localization and Mapping) and sensors, this specialization is tailored for self-driving cars but the theory can be useful for drones as well. Link: https://www.coursera.org/specializations/self-driving-cars Autonomous Navigation for Flying Robots: This older course is still highly relevant for anyone interested in autonomous navigation for flying robots. It offers valuable insights and knowledge. Link: https://www.edx.org/course/autonomous-navigation-for-flying-robots Drone Dojo: For those looking to build their own drones, Drone Dojo provides useful instructions and courses to get started on DIY drone projects. Link: https://dojofordrones.com/ ETHx: Autonomous Mobile Robots: This course focuses on the principles of autonomous navigation and control of mobile robots, which could also be applicable for autonomy of drones. It covers topics such as perception, localization, planning, and control, which are essential for enabling robots to operate autonomously in dynamic environments. You can audit the course material for free with limited access. Link: https://www.edx.org/learn/autonomous-robotics/eth-zurich-autonomous-mobile-robots Working list This list contains some resources that we haven't included in the overview. Remove the item once it has been included PX4 getting started page Learning ArduPilot Aerial robotics 101 medium article Bitcraze crazyflie tutorial page Simnet + Ardupilot academy Autonomy course Worcester Polytechnic Institute List of robotic aerial resources Credit Lots of thanks for anybody contributing to this linkedin post . This was extremely helpful! This page was last updated: April 20, 2025","title":"Education and tutorials"},{"location":"education_and_tutorial/#education-and-tutorials","text":"This page will contain a list of education courses or tutorials for aerial robotics. This is a partly compilation of this ROS discourse thread and the May meeting about tutorials and education and some googling :) This also includes input from a Linkedin post for a call of suggestions. This has been an adaption from the following Bitcraze Blogpost , and the overview presentation done for the ROS-aerial CWG meetings","title":"Education and tutorials"},{"location":"education_and_tutorial/#books","text":"","title":"Books"},{"location":"education_and_tutorial/#small-unmanned-aircraft-theory-and-practice","text":"There is this important resource which is the book titled \u2018Small Unmanned Aircraft: Theory and Practice. (2012)\u2019 This book has been written by Randy Beard and Tim McLain of Brigham Young University, and it covers everything from the absolute basics of coordinate frames and quadrotor dynamics to path planning and cameras. It is a must-read for anybody starting in UAVs and Aerial robotics. Year published: 2012 The physical book can be found here: http://press.princeton.edu/titles/9632.html *The available PDFs can be accessed on GitHub: https://github.com/randybeard/uavbook","title":"Small Unmanned Aircraft: Theory and Practice"},{"location":"education_and_tutorial/#summer-schools","text":"","title":"Summer schools"},{"location":"education_and_tutorial/#ieee-ras-summer-school-on-multi-robot-systems","text":"There is an in-person IEEE RAS summer school on Multi-robot Systems organized by the Czech Technical University of Prague. It has been organized for over 5 summers and they use real aerial robotic platforms for their practicals with students, along with gettting lessons of both UAV and multi-robot experts. A summer school to not miss if you'd like to get started in the world of aerial robotics! Date: Summer 2025 Link: https://mrs.fel.cvut.cz/summer-school-2025/","title":"IEEE RAS summer school on Multi-robot Systems"},{"location":"education_and_tutorial/#drone-summer-school-at-the-sdu-uas-center","text":"The University of Soutern Denmark has their yearly Drone Summer School at the SDU UAS Center . Here you will learn to construct and fly drones focused around computer-vision. There will be team formation where the drone is build and where it can be flown outside in their huge UAS Denmark test center. Date: Summer 2025 Link: https://www.sdu.dk/en/forskning/sduuascenter/education/drone-summer-school/","title":"Drone Summer School at the SDU UAS Center"},{"location":"education_and_tutorial/#university-specialization-in-in-aerial-robotics","text":"","title":"University Specialization in in Aerial Robotics"},{"location":"education_and_tutorial/#bachelors-in-aerial-robotics","text":"If you are fully committed to pursuing a career in aerial robotics, both Embry-Riddle Aeronautical University and the University of North Dakota offer full bachelor\u2019s majors in becoming a UAV engineer. Link Embry-Riddle Aeronautical University: https://erau.edu/degrees/bachelor/unmanned-aircraft-systems Link University of North Dakota: https://und.edu/programs/unmanned-aircraft-system-operations-bs-aero/","title":"Bachelors in Aerial robotics"},{"location":"education_and_tutorial/#masters-in-aerial-robotics","text":"If you have already done your bachelors in a different engineering major, or if you just want to learn, The University of Soutern Denmark offers a Drone and Autonomous Systems specialization for their master programmes in Robots Systems. Link: https://www.sdu.dk/en/uddannelse/kandidat/robotteknologi/uddannelsens_opbygning/drone/","title":"Masters in Aerial robotics"},{"location":"education_and_tutorial/#online-courses-on-aerial-robotics","text":"This section shows online courses for aerial robotics with online instructor.","title":"Online Courses on Aerial Robotics"},{"location":"education_and_tutorial/#udacity-flying-car-nano-degree","text":"Udacity has been offering a course on Aerial Vehicles for quite some time for the Flying car nano degree . The lessons are taught by top names in the industry and cover key aspects of Aerial Robotics, such as motion planning, controls, and estimation, with lab assignments involving a real drone. The course duration is 4 months, and access is available for a fee. Year last updated: 2025 Link: https://www.udacity.com/course/flying-car-nanodegree--nd787","title":"Udacity: Flying car nano degree"},{"location":"education_and_tutorial/#udamy-applied-control-system-3-uav-drone-3d-dynamics-control","text":"Additionally, there\u2019s the course \u2018Applied Control System 3: UAV Drone (3D Dynamics & Control)\u2019 which is part of a series by Mark Misin. This course delves deep into the dynamics, control, and modeling of quadrotors. Year last updated: 2025 Link: https://www.udemy.com/course/applied-control-systems-for-engineers-2-uav-drone-control/","title":"Udamy: Applied Control System 3: UAV Drone (3D Dynamics &amp; Control)"},{"location":"education_and_tutorial/#university-courses-on-aerial-robotics-with-open-resources","text":"This section showes university courses that have released recordings of lectures, slides and/or assignments. For instructions participants would need to follow the actual course at that one university.","title":"University courses on Aerial Robotics with open resources"},{"location":"education_and_tutorial/#brown-unis-introduction-to-robotics","text":"Brown University offers a course called \u2018Introduction to Robotics\u2019 taught by Prof. Stefanie Tellix. While the introduction covers generic robotics, the focus of the full course is on building and programming the Duckiedrone . The course dives straight into autonomy and also teaches students how to work with ROS . Year last updated: 2023 Link: https://cs.brown.edu/courses/cs1951r/","title":"Brown Uni's Introduction to Robotics"},{"location":"education_and_tutorial/#uni-of-washingtons-introduction-to-robotics","text":"The \u2018Bio-inspired Robotics\u2019 course at the University of Washington, led by Prof. Sawyer Fuller, explores the realm of drawing inspiration from nature rather than reinventing the wheel. It covers various robots inspired by creatures capable of swimming, walking, hopping, and of course, flying. Lab assignments in this course involve working with a Crazyflie drone. Year last updated: 2023 Link: https://faculty.washington.edu/minster/bio_inspired_robotics/","title":"Uni. of Washington's Introduction to Robotics"},{"location":"education_and_tutorial/#princetons-intro-to-robotics","text":"Princeton University have also decided to release their \u2018Intro to Robotics\u2019 lectures (recordings and slides) and materials for the public. It covers all from control and estimation, computer vision and planning. Also it offers lab assignments with the Crazyflie . Year last updated: 2022 Link: https://irom-lab.princeton.edu/intro-to-robotics/","title":"Princeton's Intro to Robotics"},{"location":"education_and_tutorial/#mits-visual-navigation-for-autonomous-vehicles-vnav","text":"MIT are offering a course on Visual Navigation for Autonomous Vehicles (VNAV) , making all the handouts, notes and slides availabie. This course is tought by Prof. Luca Carlone, and teaches about the theoratical theroy of visual navigation. It also covers the latest algorithms, like SLAM, detection and deep learning and which software packages to use, like ROS 2 and a Unity based simulator. Year last updated: 2022 Link: https://vnav.mit.edu/","title":"MIT's Visual Navigation for Autonomous Vehicles (VNAV)"},{"location":"education_and_tutorial/#uni-of-marylands-autonomous-aerial-robotics","text":"The University of Maryland offers a course on Autonomous Aerial Robotics , making all videos, slides, and assignments available. Taught by Nitin J. Sanket and Chahat Deep Singh, the course covers everything from basic control and dynamics to full autonomy. It\u2019s a comprehensive resource for aerial robotics. The course utilizes the Parrot Bebop 2.0 , and while a Mocap system is required, you may explore the possibility of adapting the course to a different platform. ROS is also part of this course Year last updated: 2019 Link: http://prg.cs.umd.edu/enae788m","title":"Uni. of Maryland's Autonomous Aerial Robotics"},{"location":"education_and_tutorial/#youtube","text":"Youtube also has quite some tutorials available so this section highlights a few.","title":"Youtube"},{"location":"education_and_tutorial/#droneblocks-youtube-channel","text":"DroneBlocks : This channel hosts educational content for robotics, it mainly focuses on aerial platforms such as DJI, CrazyFly, and PX4. Last video online: 2025 Link: https://www.youtube.com/@droneblocks","title":"DroneBlocks' Youtube channel"},{"location":"education_and_tutorial/#px4-autopilot-specific-content-youtube-channel","text":"PX4 Autopilot specific content : This channel is supported by the Dronecode Foundation and is the official PX4 Autopilot channel, you can expect video recordings from Dronecode/PX4 events, and tutorials/guides from any open source project hosted under the Dronecode umbrella. Last video online: 2025 Link: https://www.youtube.com/@px4autopilot","title":"PX4 Autopilot specific content Youtube channel"},{"location":"education_and_tutorial/#intelligent-quads-youtube-channel","text":"Intelligent Quads YouTube Channel : This channel is entirely dedicated to creating autonomous UAVs, covering topics from Ardupilot to MAVlink to ROS and Gazebo. It appears to be a valuable resource for beginners in the field of autonomous UAVs. This also includes ROS as part of the lessons as well. Last video online: 2023 Link: https://www.youtube.com/@IntelligentQuads","title":"Intelligent Quads YouTube Channel"},{"location":"education_and_tutorial/#carbonaeronautics-youtube-channel","text":"carbonaeronautics : This channel will guide you every step of the way, explaining the essentials on aeronautics, electronics and embedded programming. All components are commercially available and all programs are fully hackable, meaning that you can adapt anything you want and create a quadcopter capable of stuff that goes way beyond the scope of this manual! Last video online: 2023 Link: https://www.youtube.com/@carbonaeronautics","title":"carbonaeronautics Youtube channel"},{"location":"education_and_tutorial/#drone-programming-with-python-2021-youtube-video","text":"Drone Programming with Python (2021) : This popular tutorial/course teaches viewers how to program a real drone using Python with the DJI Tello . It offers a great opportunity for anyone looking for a short and enjoyable project to undertake, especially on a rainy day, while still working with a real platform. Link: https://youtu.be/LmEcyQnfpDA","title":"Drone Programming with Python (2021) Youtube video"},{"location":"education_and_tutorial/#code-examples","text":"Here are some code examples that can be used as reference for experiments.","title":"Code Examples"},{"location":"education_and_tutorial/#mambo-ros-examples","text":"Mambo ROS Examples: This is a collection of experiments targeted Parrot Mambo drones, there are experiments with one or multiple vehicles at the same time. It runs over ROS over BLE, and some test are adapted to make use of a Vicon MoCap system. From a control theory's perspective, it showcases an optional robust control strategy, using an H-Infinity controller with perturbation estimation and a identified dynamic model of a Parrot Mambo drone. Last updated commit: 2023 Link: https://github.com/TOTON95/Mambo_ROS_Examples","title":"Mambo ROS Examples"},{"location":"education_and_tutorial/#some-special-mentions","text":"So here there are some courses that either doesn't fit in the above categories or are deprecated. University of Twente UAV Centre: The University of Twente has created a portal with a variety of UAV-related courses. You can find a wealth of information and educational materials on their website. Link: https://www.itc.nl/facilities/centres-of-expertise/uav-centre/ Self-Driving Car Specialization: If you are interested in learning more about SLAM (Simultaneous Localization and Mapping) and sensors, this specialization is tailored for self-driving cars but the theory can be useful for drones as well. Link: https://www.coursera.org/specializations/self-driving-cars Autonomous Navigation for Flying Robots: This older course is still highly relevant for anyone interested in autonomous navigation for flying robots. It offers valuable insights and knowledge. Link: https://www.edx.org/course/autonomous-navigation-for-flying-robots Drone Dojo: For those looking to build their own drones, Drone Dojo provides useful instructions and courses to get started on DIY drone projects. Link: https://dojofordrones.com/ ETHx: Autonomous Mobile Robots: This course focuses on the principles of autonomous navigation and control of mobile robots, which could also be applicable for autonomy of drones. It covers topics such as perception, localization, planning, and control, which are essential for enabling robots to operate autonomously in dynamic environments. You can audit the course material for free with limited access. Link: https://www.edx.org/learn/autonomous-robotics/eth-zurich-autonomous-mobile-robots","title":"Some special mentions"},{"location":"education_and_tutorial/#working-list","text":"This list contains some resources that we haven't included in the overview. Remove the item once it has been included PX4 getting started page Learning ArduPilot Aerial robotics 101 medium article Bitcraze crazyflie tutorial page Simnet + Ardupilot academy Autonomy course Worcester Polytechnic Institute List of robotic aerial resources","title":"Working list"},{"location":"education_and_tutorial/#credit","text":"Lots of thanks for anybody contributing to this linkedin post . This was extremely helpful! This page was last updated: April 20, 2025","title":"Credit"},{"location":"events/","text":"Events in Aerial Robotics Here are events like expos or academic conferences listed that are important for Aerial Robotists. If you know of any events that should be listed here, please submit a PR to the repository. 2025 Xponential Europe Date: Feb 17-20 Location: Dusseldorf, Germany Website: https://www.xponential-europe.com/ Description: Expo and trade fair Side-events: European Drone Forum on 17-18 Feb ICUAS Date: May 14-17 Location: Charlotte, USA Website: https://uasconferences.com/2025_icuas/ Description: International Conference on Unmanned Aircraft Systems Paper submission deadline: Feb 4 2025 Xponential Date: May 19-20 Location: Houston, USA Website: https://xponential.org/ Description: Technology Expo with a focus on drones ICRA Date: May 19-23 Location: Atlanta, USA Website: https://2025.ieee-icra.org/ Description: Academic robotics conference with many sessions on UAVs Note: Workshop on 25 years of Aerial Robotics: Challenges and Opportunities Paper submission deadline: Sept 15 2024 (already passed) International Drone Show Date: June 18-19 Location: Odense, Denmark Website: [https://2025.ieee-icra.org/](https://internationaldroneshow.com/) Description: Drone business expo with many demos Embedded Linux Conference Europe Date: Aug 25-27 Location: Amsterdam, Netherlands Website: https://events.linuxfoundation.org/open-source-summit-europe/ Description: Hosted within the Open Source Summit, ELC is the premiere event for anything open source and embedded Call for participation: Closed ROSCon Date: Oct 27-29 Location: Singapore, Singapore Website: https://roscon.ros.org/2025/ Description: Developer Conference on the Robot Operating System (ROS) Call for participation: Deadline 2nd of june IROS Date: Oct 19-25 Location: Hanzhou, China Website: http://www.iros25.org/ Description: Academic robotics conference with many sessions on UAVs Paper submission deadline: March 1 2025 IMAV Date: Nov 10-14 Location: San Andres Cholula, Mexico Website: https://femexrobotica.org/imav2025/ Description: Micro Air Vehicle Conference and Competition Call for participation: Not out yet 2026 Commercial UAV Forum Date: April 22-23 Location: Amsterdam, The Netherlands Website: https://www.forumuav.com/ Description: Commercial drone event Call for participation: Accepting submissions now This page was last updated: April 18, 2025","title":"Events in Aerial Robotics"},{"location":"events/#events-in-aerial-robotics","text":"Here are events like expos or academic conferences listed that are important for Aerial Robotists. If you know of any events that should be listed here, please submit a PR to the repository.","title":"Events in Aerial Robotics"},{"location":"events/#2025","text":"","title":"2025"},{"location":"events/#xponential-europe","text":"Date: Feb 17-20 Location: Dusseldorf, Germany Website: https://www.xponential-europe.com/ Description: Expo and trade fair Side-events: European Drone Forum on 17-18 Feb","title":"Xponential Europe"},{"location":"events/#icuas","text":"Date: May 14-17 Location: Charlotte, USA Website: https://uasconferences.com/2025_icuas/ Description: International Conference on Unmanned Aircraft Systems Paper submission deadline: Feb 4 2025","title":"ICUAS"},{"location":"events/#xponential","text":"Date: May 19-20 Location: Houston, USA Website: https://xponential.org/ Description: Technology Expo with a focus on drones","title":"Xponential"},{"location":"events/#icra","text":"Date: May 19-23 Location: Atlanta, USA Website: https://2025.ieee-icra.org/ Description: Academic robotics conference with many sessions on UAVs Note: Workshop on 25 years of Aerial Robotics: Challenges and Opportunities Paper submission deadline: Sept 15 2024 (already passed)","title":"ICRA"},{"location":"events/#international-drone-show","text":"Date: June 18-19 Location: Odense, Denmark Website: [https://2025.ieee-icra.org/](https://internationaldroneshow.com/) Description: Drone business expo with many demos","title":"International Drone Show"},{"location":"events/#embedded-linux-conference-europe","text":"Date: Aug 25-27 Location: Amsterdam, Netherlands Website: https://events.linuxfoundation.org/open-source-summit-europe/ Description: Hosted within the Open Source Summit, ELC is the premiere event for anything open source and embedded Call for participation: Closed","title":"Embedded Linux Conference Europe"},{"location":"events/#roscon","text":"Date: Oct 27-29 Location: Singapore, Singapore Website: https://roscon.ros.org/2025/ Description: Developer Conference on the Robot Operating System (ROS) Call for participation: Deadline 2nd of june","title":"ROSCon"},{"location":"events/#iros","text":"Date: Oct 19-25 Location: Hanzhou, China Website: http://www.iros25.org/ Description: Academic robotics conference with many sessions on UAVs Paper submission deadline: March 1 2025","title":"IROS"},{"location":"events/#imav","text":"Date: Nov 10-14 Location: San Andres Cholula, Mexico Website: https://femexrobotica.org/imav2025/ Description: Micro Air Vehicle Conference and Competition Call for participation: Not out yet","title":"IMAV"},{"location":"events/#2026","text":"","title":"2026"},{"location":"events/#commercial-uav-forum","text":"Date: April 22-23 Location: Amsterdam, The Netherlands Website: https://www.forumuav.com/ Description: Commercial drone event Call for participation: Accepting submissions now This page was last updated: April 18, 2025","title":"Commercial UAV Forum"},{"location":"hardware/","text":"Hardware, Components, and Dev Kits This is an list of development platforms for aerial robotics. Please start a pull request if you'd like to update these. Standard Commercial Research Platforms These are platforms that are currently commercially available for anybody to buy for their research. Copters Holybro: PX4 Vision Dev Kit V1.5 ModalAI: PX4 Autonomy Dev Kit Starling 2 and Starling 2 Max PX4 Autonomy Developer Kit Duckietown: Duckiedrone DD21 Duckiedrone DD24 Fly4Future: Fly4Future Robofly FLy4Future custom drone designs Other: NXP HoverGames Kit official hardware for the yearly HoverGames Challenge Clover by Coex Droneblocks DEXI 5 3DR Quad Zero Kit Crazyflie 2.1+ - Bitcraze Flapping wing Flapper Nimble+ insect-inspired UAV by Flapper Drones Industrial Platforms Tricopter voliro AG DJI M300 Inhouse-developed platforms These are platforms that are standard within a lab or department, with information of what it contains provided with perhaps build instructions: OmniQuad - University of Naples Federico II Agilicous - University of Zurich ModQuad - Lehigh University RMF-Owl - Norwegian University of Science and Technology MiniHawk-VTOL Components Many of the UAVs are usually built by hand and composed of different components. This usually consists of a drone frame, flight controller boards, companion computers and of course motors, batteries and ESCs. Drone Frames Many drone frames are usually built from carbon fiber and custom-made for application or research. There are some frames that are provided that will provide some base: DJI Flame wheel ARF kit F550, F450, F330 Momentum Drones DEV-7 Flight controllers Holybro: Pixhawk 4 Holybro Pixhawk 6C Holybro Pixhawk 6X Holybro Pixhawk 6X PRO mRobotics/3DR: mRo PixRacerPro 3DR Control Zero Classic 3DR Control Zero H7 OEM 3DR Reference Design Carrier Board 3DR \"Stick\" Adapter (Carrier Board) Bitcraze: Crazyflie Bolt 1.1 ARK Electronics ARK Electronics ARKV6X ARK Electronics Pi6X Flow Companion Computers For the drones that can carry it, the companion computers are important since they can do additional computations that the flight controller can not easily do. As these are capable of running some form of Linux, these can handle for instance computer vision with OpenCV or run nodes with ROS . Some companion computers also integrate flight control (RTOS) hardware in the same package Nvidia Jetson Xavier or the TX2 Module Nvidia Jetson Orin ASUS NUC Boards Raspberry PI (A+) Khadas Vim3 Odroid (various boards) NXP NAVQPlus Qualcomm RB5 MRD5165 Eagle Kit VOXL 2 by Model AI EchoPilot AI AMD Xilinx Kria Starter Kits LattePanda x86 boards Carrier boards Several vendors have developed carrier boards that can expose input/output ports of companion computers mentioned above which are packaged in a System-on-Module (SoM) form factor and also offer a standard interface for plugging in popular flight controllers/their own FCs. Mistral MRD5165 Eagle based on Qualcomm RB5 ARK Electronics Jetson PAB carrier ARK Electronics Pi6X Flow Holybro Jetson Baseboard Dronee Lychee Drone autopilot hardware Airvolute DroneCore2 Jetson + Cube Depth Cameras RealSense D455 RealSense D435i Oak-d Series like OAK-D Pro or OAK-D-Lite VOXL CAM by ModelAI Monocular Cameras Raspberry PI Cameras Compatible with RPI. IMX219 and IMX477 based cameras compatible with Jetson Xavier, NX, Nano, Orin series (other models may require device tree overlays or source changes). Google Coral Camera Compatible with NXP NAVQPLUS TOF Cameras Liteon A65 Camera Starter Kit Check with vendor for NXP NAVQPLUS compatibility. PMD Flexx2 3D Camera USB version should be compatible with most companion computers. VOXL2 TOF Depth Sensor Compatible with VOXL2. Check with vendor for early access product. Event Cameras OpenMV N6 Reference Bill of Materials Holybro S500v2 The Holybro S500v2 is a popular, relatively low-cost quadcopter. This is a list of the parts used with details of battery, motors, ESCs, and propellers with reference links to guide custom builds. S.No Part Name Part category Description Price (USD) Qty Total Cost (USD) Official/Reference Link 1 Holybro S500 frame Frame With landing gear, 385x385mm 42 1 42 https://holybro.com/collections/s500/products/s500-v2-kit?variant=42724497391805 2 Holybro Pixhawk 6C + GPS + Power module FC + GPS + Power module PM02 power module, M9N GPS 290 1 290 https://holybro.com/products/pixhawk-6c?variant=43005243785405 3 Holybro 2216 920KV CW Motor 19x19 mounting clockwise rotation 20 2 40 https://holybro.com/products/spare-parts-s500-v2-kit?variant=41591094608061 4 Holybro 2216 920KV CCW Motor 19x19 mounting counter-clockwise rotation 20 2 40 https://holybro.com/products/spare-parts-s500-v2-kit?variant=41591094640829 5 BLHeli S 20A ESC ESC Electronic Speed Controller to drive motors 14 4 56 https://holybro.com/products/spare-parts-s500-v2-kit?variant=41591094706365 6 1045 propellers Props 10x4.5\" kit of 2 pairs 12 1 12 https://holybro.com/products/spare-parts-s500-v2-kit?variant=41591094313149 7 Radiomaster R81 receiver Radio receiver Used for manually flying drone Line of Sight/testing* 18 1 18 https://holybro.com/products/radiomaster-r81-receiver 8 Holybro SiK telemetry radio v3 Telemetry link radio 500mW, 433MHz variant, pair of transmitter + receiver** 63 1 63 https://holybro.com/products/sik-telemetry-radio-v3?variant=42801817485501 9 Tattu 5200mAh 4S Battery 4S1P XT60 plug 35C 63 1 63 https://genstattu.com/tattu-5200mah-14-8v-35c-4s1p-lipo-battery-pack-with-xt60-plug.html Grand Total 624 Notes : *It can be used with Radiomaster Multiprotocol (4 in 1) or CC2500 based Radio Controller like FrSky Taranis X9D or similar **Used for connecting to ground control station, 915MHz variant also available Useful tool for this page : https://tabletomarkdown.com/convert-spreadsheet-to-markdown/ This page was last updated: April 18, 2025","title":"Hardware, Components, and Dev Kits"},{"location":"hardware/#hardware-components-and-dev-kits","text":"This is an list of development platforms for aerial robotics. Please start a pull request if you'd like to update these.","title":"Hardware, Components, and Dev Kits"},{"location":"hardware/#standard-commercial-research-platforms","text":"These are platforms that are currently commercially available for anybody to buy for their research.","title":"Standard Commercial Research Platforms"},{"location":"hardware/#copters","text":"Holybro: PX4 Vision Dev Kit V1.5 ModalAI: PX4 Autonomy Dev Kit Starling 2 and Starling 2 Max PX4 Autonomy Developer Kit Duckietown: Duckiedrone DD21 Duckiedrone DD24 Fly4Future: Fly4Future Robofly FLy4Future custom drone designs Other: NXP HoverGames Kit official hardware for the yearly HoverGames Challenge Clover by Coex Droneblocks DEXI 5 3DR Quad Zero Kit Crazyflie 2.1+ - Bitcraze","title":"Copters"},{"location":"hardware/#flapping-wing","text":"Flapper Nimble+ insect-inspired UAV by Flapper Drones","title":"Flapping wing"},{"location":"hardware/#industrial-platforms","text":"Tricopter voliro AG DJI M300","title":"Industrial Platforms"},{"location":"hardware/#inhouse-developed-platforms","text":"These are platforms that are standard within a lab or department, with information of what it contains provided with perhaps build instructions: OmniQuad - University of Naples Federico II Agilicous - University of Zurich ModQuad - Lehigh University RMF-Owl - Norwegian University of Science and Technology MiniHawk-VTOL","title":"Inhouse-developed platforms"},{"location":"hardware/#components","text":"Many of the UAVs are usually built by hand and composed of different components. This usually consists of a drone frame, flight controller boards, companion computers and of course motors, batteries and ESCs.","title":"Components"},{"location":"hardware/#drone-frames","text":"Many drone frames are usually built from carbon fiber and custom-made for application or research. There are some frames that are provided that will provide some base: DJI Flame wheel ARF kit F550, F450, F330 Momentum Drones DEV-7","title":"Drone Frames"},{"location":"hardware/#flight-controllers","text":"Holybro: Pixhawk 4 Holybro Pixhawk 6C Holybro Pixhawk 6X Holybro Pixhawk 6X PRO mRobotics/3DR: mRo PixRacerPro 3DR Control Zero Classic 3DR Control Zero H7 OEM 3DR Reference Design Carrier Board 3DR \"Stick\" Adapter (Carrier Board) Bitcraze: Crazyflie Bolt 1.1 ARK Electronics ARK Electronics ARKV6X ARK Electronics Pi6X Flow","title":"Flight controllers"},{"location":"hardware/#companion-computers","text":"For the drones that can carry it, the companion computers are important since they can do additional computations that the flight controller can not easily do. As these are capable of running some form of Linux, these can handle for instance computer vision with OpenCV or run nodes with ROS . Some companion computers also integrate flight control (RTOS) hardware in the same package Nvidia Jetson Xavier or the TX2 Module Nvidia Jetson Orin ASUS NUC Boards Raspberry PI (A+) Khadas Vim3 Odroid (various boards) NXP NAVQPlus Qualcomm RB5 MRD5165 Eagle Kit VOXL 2 by Model AI EchoPilot AI AMD Xilinx Kria Starter Kits LattePanda x86 boards","title":"Companion Computers"},{"location":"hardware/#carrier-boards","text":"Several vendors have developed carrier boards that can expose input/output ports of companion computers mentioned above which are packaged in a System-on-Module (SoM) form factor and also offer a standard interface for plugging in popular flight controllers/their own FCs. Mistral MRD5165 Eagle based on Qualcomm RB5 ARK Electronics Jetson PAB carrier ARK Electronics Pi6X Flow Holybro Jetson Baseboard Dronee Lychee Drone autopilot hardware Airvolute DroneCore2 Jetson + Cube","title":"Carrier boards"},{"location":"hardware/#depth-cameras","text":"RealSense D455 RealSense D435i Oak-d Series like OAK-D Pro or OAK-D-Lite VOXL CAM by ModelAI","title":"Depth Cameras"},{"location":"hardware/#monocular-cameras","text":"Raspberry PI Cameras Compatible with RPI. IMX219 and IMX477 based cameras compatible with Jetson Xavier, NX, Nano, Orin series (other models may require device tree overlays or source changes). Google Coral Camera Compatible with NXP NAVQPLUS","title":"Monocular Cameras"},{"location":"hardware/#tof-cameras","text":"Liteon A65 Camera Starter Kit Check with vendor for NXP NAVQPLUS compatibility. PMD Flexx2 3D Camera USB version should be compatible with most companion computers. VOXL2 TOF Depth Sensor Compatible with VOXL2. Check with vendor for early access product.","title":"TOF Cameras"},{"location":"hardware/#event-cameras","text":"OpenMV N6","title":"Event Cameras"},{"location":"hardware/#reference-bill-of-materials","text":"","title":"Reference Bill of Materials"},{"location":"hardware/#holybro-s500v2","text":"The Holybro S500v2 is a popular, relatively low-cost quadcopter. This is a list of the parts used with details of battery, motors, ESCs, and propellers with reference links to guide custom builds. S.No Part Name Part category Description Price (USD) Qty Total Cost (USD) Official/Reference Link 1 Holybro S500 frame Frame With landing gear, 385x385mm 42 1 42 https://holybro.com/collections/s500/products/s500-v2-kit?variant=42724497391805 2 Holybro Pixhawk 6C + GPS + Power module FC + GPS + Power module PM02 power module, M9N GPS 290 1 290 https://holybro.com/products/pixhawk-6c?variant=43005243785405 3 Holybro 2216 920KV CW Motor 19x19 mounting clockwise rotation 20 2 40 https://holybro.com/products/spare-parts-s500-v2-kit?variant=41591094608061 4 Holybro 2216 920KV CCW Motor 19x19 mounting counter-clockwise rotation 20 2 40 https://holybro.com/products/spare-parts-s500-v2-kit?variant=41591094640829 5 BLHeli S 20A ESC ESC Electronic Speed Controller to drive motors 14 4 56 https://holybro.com/products/spare-parts-s500-v2-kit?variant=41591094706365 6 1045 propellers Props 10x4.5\" kit of 2 pairs 12 1 12 https://holybro.com/products/spare-parts-s500-v2-kit?variant=41591094313149 7 Radiomaster R81 receiver Radio receiver Used for manually flying drone Line of Sight/testing* 18 1 18 https://holybro.com/products/radiomaster-r81-receiver 8 Holybro SiK telemetry radio v3 Telemetry link radio 500mW, 433MHz variant, pair of transmitter + receiver** 63 1 63 https://holybro.com/products/sik-telemetry-radio-v3?variant=42801817485501 9 Tattu 5200mAh 4S Battery 4S1P XT60 plug 35C 63 1 63 https://genstattu.com/tattu-5200mah-14-8v-35c-4s1p-lipo-battery-pack-with-xt60-plug.html Grand Total 624 Notes : *It can be used with Radiomaster Multiprotocol (4 in 1) or CC2500 based Radio Controller like FrSky Taranis X9D or similar **Used for connecting to ground control station, 915MHz variant also available Useful tool for this page : https://tabletomarkdown.com/convert-spreadsheet-to-markdown/ This page was last updated: April 18, 2025","title":"Holybro S500v2"},{"location":"message_standards/","text":"Message standards REP 147 A Standard interface for Aerial Vehicles Within the ROS ecoysystem, there is currently a ROS enhancement proposal (REP) available to give guidance to message standards for UAVS. This can be found here: REP 147 A Standard interface for Aerial Vehicles Message standards within autopilot suites MAVlink MAVLink, an acronym for Micro Air Vehicle Link, is a communication system mainly used for the exchange of information between unmanned aerial vehicles and ground control stations. This protocol, which was launched in 2009, is structured as a header-only message marshaling library. MAVLink is versatile, supporting a broad range of messages and capable of being sent over virtually any type of serial connection, including Wi-Fi and radio technologies. In terms of messages, they are defined at compile time in XML files, which are processed to create libraries for sending and receiving messages. If new messages are added or existing ones are modified, the XML definitions need to be updated and the application recompiled. https://mavlink.io/en/ MAVlink is used in 2 autopilot suites. Eventhough the same message type are being shared in both the suites, the accomendating behavior might differ: Ardupilot MAVlink usage PX4 MAVlink usage This page was last updated: November 18, 2024","title":"Message standards"},{"location":"message_standards/#message-standards","text":"","title":"Message standards"},{"location":"message_standards/#rep-147-a-standard-interface-for-aerial-vehicles","text":"Within the ROS ecoysystem, there is currently a ROS enhancement proposal (REP) available to give guidance to message standards for UAVS. This can be found here: REP 147 A Standard interface for Aerial Vehicles","title":"REP 147 A Standard interface for Aerial Vehicles"},{"location":"message_standards/#message-standards-within-autopilot-suites","text":"","title":"Message standards within autopilot suites"},{"location":"message_standards/#mavlink","text":"MAVLink, an acronym for Micro Air Vehicle Link, is a communication system mainly used for the exchange of information between unmanned aerial vehicles and ground control stations. This protocol, which was launched in 2009, is structured as a header-only message marshaling library. MAVLink is versatile, supporting a broad range of messages and capable of being sent over virtually any type of serial connection, including Wi-Fi and radio technologies. In terms of messages, they are defined at compile time in XML files, which are processed to create libraries for sending and receiving messages. If new messages are added or existing ones are modified, the XML definitions need to be updated and the application recompiled. https://mavlink.io/en/ MAVlink is used in 2 autopilot suites. Eventhough the same message type are being shared in both the suites, the accomendating behavior might differ: Ardupilot MAVlink usage PX4 MAVlink usage This page was last updated: November 18, 2024","title":"MAVlink"},{"location":"middleware_and_drivers/","text":"Middleware and Drivers The aim for this page is to provide a collection of ROS packages/related libraries which are very useful for aerial ROS projects either to serve as a reference or directly use as a part of a custom software stack. This list aims to address the gap between the flight controller firmware and purely autonomy related packages. Middleware libraries Enabling low overhead publish/subscribe on microcontrollers: Micro-XRCE-DDS Zenoh PX4-FastRTPS - superceded by Micro-XRCE-DDS Driver packages for drone platforms ROS packages built atop SDKs from drone vendors to interface to their closed-source flight controller firmwares. Several of these may be for much older ROS1 distros but can have utility in terms of serving as references. Parrot ARDrone Autonomy Parrot Bebop Autonomy Parrot ANAFI Autonomy DJI Tello driver ROS1 , ROS2 pre-Jazzy , ROS2 Jazzy and Beyond Parrot Mambo driver This page was last updated: June 17, 2025","title":"Middleware and Drivers"},{"location":"middleware_and_drivers/#middleware-and-drivers","text":"The aim for this page is to provide a collection of ROS packages/related libraries which are very useful for aerial ROS projects either to serve as a reference or directly use as a part of a custom software stack. This list aims to address the gap between the flight controller firmware and purely autonomy related packages.","title":"Middleware and Drivers"},{"location":"middleware_and_drivers/#middleware-libraries","text":"Enabling low overhead publish/subscribe on microcontrollers: Micro-XRCE-DDS Zenoh PX4-FastRTPS - superceded by Micro-XRCE-DDS","title":"Middleware libraries"},{"location":"middleware_and_drivers/#driver-packages-for-drone-platforms","text":"ROS packages built atop SDKs from drone vendors to interface to their closed-source flight controller firmwares. Several of these may be for much older ROS1 distros but can have utility in terms of serving as references. Parrot ARDrone Autonomy Parrot Bebop Autonomy Parrot ANAFI Autonomy DJI Tello driver ROS1 , ROS2 pre-Jazzy , ROS2 Jazzy and Beyond Parrot Mambo driver This page was last updated: June 17, 2025","title":"Driver packages for drone platforms"},{"location":"safety_management/","text":"Safety and Management Systems Quadcopter and other Aerial vehicles come in all forms and sizes. Safety systems are important for all, but the bigger an aerial vehicle becomes, the more important it becomes that the right fail-safes and emergency systems are in place! This pages gives an overview of those safety systems that have been implemented so far. Safety in ROS Currently specifically for aerial vehicles, the safety implementation is depended on the ROS autonomy stack used. The ROS-0147 has a suggestion for flightmodes for a statemachine that can simplify the understanding of it. It is also expecting that ROS will be run offboard on an external computer, and that it should be in control of the safety state machine. This should probably be discussed if it would be a good idea for ROS to be in control of this or the autopilot suites themselves. Safety in Autopilot suites Adapted from the following blogpost: https://www.bitcraze.io/2023/04/safety-and-the-brushless/ These are current Safety managements systems existing in Paparazzi UAV , Betaflight , ArduPilot and PX4 . The Crazyflie ecosystem also have some measures but are currently overhauling their safety framework now in the form of a supervisor. Pre-flight checks. Before a vehicle can fly, certain conditions must be met. These includ: calibrating and ensuring functionality of internal sensors (IMU, barometer, magnetometer) receiving a GPS signal converging the internal state estimator (usually an extended Kalman filter) to a position checking for remote control connection and datalink to a ground station conducting feasibility checks (e.g., mission parameters, start location proximity) confirming sufficient battery level, and ensuring the absence of error states from previous flights or crashes. Preflight checks documentation: PX4: https://docs.px4.io/main/en/flying/pre_flight_checks.html#preflight-sensor-estimator-checks ArduPilot: https://ardupilot.org/copter/docs/common-prearm-safety-checks.html#failure-messages Beta flight: https://betaflight.com/docs/wiki/guides/current/GPS-Rescue-v4-4#sanity-check-options Paparazzi UAV: Indicated per platform if necessary, on their wiki: https://wiki.paparazziuav.org/wiki/Failsafe Crazyflie firmware: https://www.bitcraze.io/documentation/repository/crazyflie-firmware/master/functional-areas/supervisor/ Fail-safe mechanisms After passing pre-flight checks and arming the UAV, the takeoff command is given. However, UAV flights have inherent risks, particularly during takeoff. To mitigate these risks, numerous safety features, known as failsafes, are implemented during the flight phase. These failsafes are categorized as triggers and behaviors, allowing developers to specify the UAV's response to different failures, such as initiating a safe landing in the event of GPS loss. Triggers Thus, there are triggers that can enable the autopilot\u2019s failsafe mechanics: No connection with the remote control No connection with the Ground station or Datalink Low Battery Position estimate diverges or full GPS loss Waypoint going beyond geofence or Mission is not feasible Other vehicles are nearby. Also, sometimes the support of an external Automatic Trigger system is required, which is a box that monitors the conditions where the UAV should take action in case there is no GPS, other aerial vehicles are nearby, or the UAV is crossing a geofence determined by outdoor flight restrictions. Note that all of these triggers usually have a couple of conditions attached, such as the level of the \u2018low battery\u2019 or the number of seconds of \u2018GPS loss\u2019 deemed acceptable. Fail-safe behaviors During UAV flights, safety features can be customized per trigger, deviating from the default actions set by regulations. Disarming the vehicle completely increases the risk of crashing and causing harm. Allowing the drone to autonomously complete the mission without intervention poses the risk of losing the vehicle or trespassing restricted areas. Modifying default behaviors should be undertaken by knowledgeable individuals with careful consideration. These behaviors can include the following: No action at all Warning on the console or remote control display Continue the mission autonomously Stay still at the same position or go to a home position Fly to a lower altitude Land based on position or safely land by reducing thrust No input to motors or completely disarming the motors Fail-safe documentation PX4: https://docs.px4.io/main/en/config/safety.html ArduPilot: https://ardupilot.org/copter/docs/failsafe-landing-page.html Betaflight: https://betaflight.com/docs/wiki/guides/current/Failsafe Paparazzi UAV: https://wiki.paparazziuav.org/wiki/Failsafe Crazyflie firmware: https://www.bitcraze.io/documentation/repository/crazyflie-firmware/master/functional-areas/supervisor/ Emergencies Fail-safes ensure safe flight, but emergencies like crashes, flips, or hardware failures can still occur. In such cases, the standard default action is to disarm the vehicle to prevent unintended motor activation. Backup systems connected to ESCs may take over if the autopilot becomes unresponsive. The pilot plays a vital role in safety, with the remote control featuring a dedicated button or switch for different modes, enabling actions like landing or disarming. It's recommended to have a net or towel to stop spinning motors and to promptly disconnect the battery. Being prepared for potential LiPo battery hazards is essential, with sand or fire retardant on hand. While autopilots provide guidance, conducting thorough research on handling emergencies, spinning parts, and LiPo battery fires is crucial. Here a list of that: * Remote control should have a dedicated button/switch for different modes, landing, or disarming. * Dealing with spinning motors Use a net or towel to stop them and promptly disconnect the battery. * To prepare for LiPo battery hazards, Have sand or fire retardant available. This page was last updated: November 24, 2024","title":"Safety and Management Systems"},{"location":"safety_management/#safety-and-management-systems","text":"Quadcopter and other Aerial vehicles come in all forms and sizes. Safety systems are important for all, but the bigger an aerial vehicle becomes, the more important it becomes that the right fail-safes and emergency systems are in place! This pages gives an overview of those safety systems that have been implemented so far.","title":"Safety and Management Systems"},{"location":"safety_management/#safety-in-ros","text":"Currently specifically for aerial vehicles, the safety implementation is depended on the ROS autonomy stack used. The ROS-0147 has a suggestion for flightmodes for a statemachine that can simplify the understanding of it. It is also expecting that ROS will be run offboard on an external computer, and that it should be in control of the safety state machine. This should probably be discussed if it would be a good idea for ROS to be in control of this or the autopilot suites themselves.","title":"Safety in ROS"},{"location":"safety_management/#safety-in-autopilot-suites","text":"Adapted from the following blogpost: https://www.bitcraze.io/2023/04/safety-and-the-brushless/ These are current Safety managements systems existing in Paparazzi UAV , Betaflight , ArduPilot and PX4 . The Crazyflie ecosystem also have some measures but are currently overhauling their safety framework now in the form of a supervisor.","title":"Safety in Autopilot suites"},{"location":"safety_management/#pre-flight-checks","text":"Before a vehicle can fly, certain conditions must be met. These includ: calibrating and ensuring functionality of internal sensors (IMU, barometer, magnetometer) receiving a GPS signal converging the internal state estimator (usually an extended Kalman filter) to a position checking for remote control connection and datalink to a ground station conducting feasibility checks (e.g., mission parameters, start location proximity) confirming sufficient battery level, and ensuring the absence of error states from previous flights or crashes. Preflight checks documentation: PX4: https://docs.px4.io/main/en/flying/pre_flight_checks.html#preflight-sensor-estimator-checks ArduPilot: https://ardupilot.org/copter/docs/common-prearm-safety-checks.html#failure-messages Beta flight: https://betaflight.com/docs/wiki/guides/current/GPS-Rescue-v4-4#sanity-check-options Paparazzi UAV: Indicated per platform if necessary, on their wiki: https://wiki.paparazziuav.org/wiki/Failsafe Crazyflie firmware: https://www.bitcraze.io/documentation/repository/crazyflie-firmware/master/functional-areas/supervisor/","title":"Pre-flight checks."},{"location":"safety_management/#fail-safe-mechanisms","text":"After passing pre-flight checks and arming the UAV, the takeoff command is given. However, UAV flights have inherent risks, particularly during takeoff. To mitigate these risks, numerous safety features, known as failsafes, are implemented during the flight phase. These failsafes are categorized as triggers and behaviors, allowing developers to specify the UAV's response to different failures, such as initiating a safe landing in the event of GPS loss.","title":"Fail-safe mechanisms"},{"location":"safety_management/#triggers","text":"Thus, there are triggers that can enable the autopilot\u2019s failsafe mechanics: No connection with the remote control No connection with the Ground station or Datalink Low Battery Position estimate diverges or full GPS loss Waypoint going beyond geofence or Mission is not feasible Other vehicles are nearby. Also, sometimes the support of an external Automatic Trigger system is required, which is a box that monitors the conditions where the UAV should take action in case there is no GPS, other aerial vehicles are nearby, or the UAV is crossing a geofence determined by outdoor flight restrictions. Note that all of these triggers usually have a couple of conditions attached, such as the level of the \u2018low battery\u2019 or the number of seconds of \u2018GPS loss\u2019 deemed acceptable.","title":"Triggers"},{"location":"safety_management/#fail-safe-behaviors","text":"During UAV flights, safety features can be customized per trigger, deviating from the default actions set by regulations. Disarming the vehicle completely increases the risk of crashing and causing harm. Allowing the drone to autonomously complete the mission without intervention poses the risk of losing the vehicle or trespassing restricted areas. Modifying default behaviors should be undertaken by knowledgeable individuals with careful consideration. These behaviors can include the following: No action at all Warning on the console or remote control display Continue the mission autonomously Stay still at the same position or go to a home position Fly to a lower altitude Land based on position or safely land by reducing thrust No input to motors or completely disarming the motors Fail-safe documentation PX4: https://docs.px4.io/main/en/config/safety.html ArduPilot: https://ardupilot.org/copter/docs/failsafe-landing-page.html Betaflight: https://betaflight.com/docs/wiki/guides/current/Failsafe Paparazzi UAV: https://wiki.paparazziuav.org/wiki/Failsafe Crazyflie firmware: https://www.bitcraze.io/documentation/repository/crazyflie-firmware/master/functional-areas/supervisor/","title":"Fail-safe behaviors"},{"location":"safety_management/#emergencies","text":"Fail-safes ensure safe flight, but emergencies like crashes, flips, or hardware failures can still occur. In such cases, the standard default action is to disarm the vehicle to prevent unintended motor activation. Backup systems connected to ESCs may take over if the autopilot becomes unresponsive. The pilot plays a vital role in safety, with the remote control featuring a dedicated button or switch for different modes, enabling actions like landing or disarming. It's recommended to have a net or towel to stop spinning motors and to promptly disconnect the battery. Being prepared for potential LiPo battery hazards is essential, with sand or fire retardant on hand. While autopilots provide guidance, conducting thorough research on handling emergencies, spinning parts, and LiPo battery fires is crucial. Here a list of that: * Remote control should have a dedicated button/switch for different modes, landing, or disarming. * Dealing with spinning motors Use a net or towel to stop them and promptly disconnect the battery. * To prepare for LiPo battery hazards, Have sand or fire retardant available. This page was last updated: November 24, 2024","title":"Emergencies"},{"location":"simulation/","text":"Simulation of Aerial Robotics Simulation is crucial when working with Unmanned Aerial Vehicles (UAVs). Testing different trajectories and control paradigms in a simulator before implementing them on the real platform ensures not only safety but also facilitates development. This page presents several simulator options for aerial robotics enthusiasts. Comparison The following simulators have their own integrated physics simulation and basic rendering capabilities. They are capable of simulating the aerodynamic forces necessary to keep UAVs airborne: For the following comparison, we have refered to this article: C. A. Dimmig et al., \"Survey of Simulators for Aerial Robots: An Overview and In-Depth Systematic Comparisons,\" in IEEE Robotics & Automation Magazine, doi: 10.1109/MRA.2024.3433171 The Arxiv prepint of the paper can be found here Features List migh not be complete. If you see any error or missing components, feel free to open a PR or issue. Name Physics Engine Rendering Linux[^1] Windows[^1] MacOS[^1] Interface (S/H)ITL[^6] Active[^2] Hardware requirement[^3] Licence Open source[^4] Interest [^5] Gazebo ( RotorS , CrazyS , PX4 SITL ) ODE/ Bullet/ DART/ Simbody OGRE \u2713 ( \u2713 \u2713 \u2713 ) \u2731 ( \u2717 \u2717 \u2717) \u2713 ( \u2717 \u2717 \u2717 ) ROS 1/2, C++, RL PX4, ArduPilot, CF ^7 \u2713 ( \u2717 \u2731 \u2717 ) minimal/decent Apache 2.0 \u2713 High Gazebo Bullet/ DART/ TPE OGRE \u2713 \u2731 \u2713 ROS 1/2, C++, Python, RL PX4, ArduPilot, CF \u2713 minimal/decent Apache 2.0 \u2713 High Isaac ( Pegasus , Aerial Gym ) NVIDIA PhysX/ Flex Vulkan \u2713 \u2717 \u2717 ROS 1/2, Python, RL Pegasus: PX4 \u2713 high/demanding NVIDIA OMNIVERSE (BSD 3) \u2717 (\u2713 \u2713) User specific Webots ODE OpenGL \u2713 \u2713 \u2713 ROS 1/2, C/C++, Python, MATLAB, Java ArduPilot, CF \u2713 decent/high Apache 2.0 \u2713 Developing CoppeliaSim Bullet/ODE/Vortex/Newton/MuJoCo OpenGL \u2713 \u2713 \u2713 ROS 1/2, C/C++, Python, MATLAB, Java,Lua,Octave -- \u2713 decent/high GNU GPL/Commercial \u2731 Decent AIRsim NVIDIA PhysX Unreal,Unity \u2713 \u2713 \u2713 ROS 1, C++, Python, C#, Java,RL PX4, ArduPilot \u2717 medium/high MIT \u2713 Low Flightmare Ad hoc, Gazebo classic Unity \u2713 \u2717 \u2717 ROS 1, C++, RL -- \u2717 -- MIT \u2713 Low FlightGoggles Ad hoc Unity \u2713 \u2731 \u2717 ROS 1, C++ Motion capture \u2717 -- MIT \u2713 Unknown Gym-pybullet-drones Pybullet OpenGL \u2713 \u2731 \u2713 Python, RL Betaflight, CF \u2713 minimal/decent/high MIT (Pybullet: zlib ) \u2713 High RotorTM Ad hoc OpenGL \u2713 \u2717 \u2717 ROS 1, Python, MATLAB -- \u2713 -- GNU GPL \u2713 Unknown MATLAB UAV Toolbox MATLAB Unreal \u2713 \u2713 \u2713 ROS 2, MATLAB PX4 \u2713 -- Proprietary, Commercial \u2717 Unknown O3de NVIDIA PhysX/ NVIDIA Cloth/ AMD TressFX Atom \u2713 \u2713 \u2731 ROS 2[^8] , C++ unknown \u2713 decent/high Apache-2.0/MIT \u2713 Developing Drake ad hoc unknown \u2713 \u2717 \u2713 C++, Python, ROS 2 unknown \u2713 unknown BSD 3 \u2713 Developing Flightgear unknown unknown \u2713 \u2713 \u2713 C++ unknown \u2713 minimal/decent GNU-GPL \u2713 Low RealFlight unknown unknown \u2717 \u2713 \u2717 -- unknown \u2713 minimal/decent non-public \u2717 Low RotorPy ad hoc unknown \u2713 \u2713 \u2713 Python -- \u2713 minimal/decent MIT \u2713 Developing jMAVSim unkown Java3D \u2713 \u2713 \u2713 Java, UDP PX4 \u2713 minimal/decent BSD-3 \u2713 Low [^1]: \u2713: Full support, \u2731: Partial support, \u2717: No support [^2]: \u2713: Active and maintained, \u2731: Inactive but responding to issues/ PR, \u2717: Inactive for 2+ years [^3]: For a referance, a laptop running Intel i5 10th gen (or similar) with 8gb ddr4 ram and NVIDIA T100 4gb (or similar) are considered as minimal requirement. [^4]: \u2713: Yes, \u2731: Yes for non commercial use-case , \u2717: No [^5]: Usage in Aerial ROS/Robotics community according to several survey on Discourse and during the meetings. [^6]: (Software/Hardware) In The Loop [^8]: It seem under development and there is some docs out there. Vehicle types Simulator Multirotor (Basic) Multirotor (Drag) Multirotor (Wind) Fixed-wings Aerial Manipulators Swarms Cars Other vehicles Gazebo (Classic & New) \u2713 \u2713 \u2713 \u2713 \u2731 \u2731 \u2713 \u2713 Isaac (Pegasus, Aerial Gym) \u2713 \u2717(\u2713,\u2717) \u2717 \u2717 \u2717 \u2713 \u2713(\u2717,\u2717) \u2713(\u2717,\u2717) Webots \u2713 \u2717 \u2717 \u2717 \u2717 \u2731 \u2713 \u2713 CoppeliaSim \u2713 \u2713 \u2731 \u2717 \u2731 \u2731 \u2713 \u2713 AirSim \u2713 \u2713 \u2713 \u2717 \u2717 \u2731 \u2713 \u2717 Flightmare \u2713 \u2713 \u2717 \u2717 \u2717 \u2713 \u2717 \u2717 FlightGoggles \u2713 \u2713 \u2717 \u2717 \u2717 \u2717 \u2713 \u2717 gym-pybullet-drones \u2713 \u2713 \u2717 \u2717 \u2717 \u2713 \u2717 \u2717 RotorTM \u2713 \u2717 \u2717 \u2717 \u2713 \u2713 \u2717 \u2717 MATLAB UAV Toolbox \u2713 \u2713 \u2713 \u2713 \u2717 \u2731 \u2717 \u2717 O3de* ~ ? ? ? ? ? ~ ~ Drake* ? ? ? ? ? ? ? ? RotorPy* ~ ~ ~ \u2717 \u2717 ~ \u2717 \u2717 [ * ] : Unknown data. If you have information on specific topic, please comment bellow with the referance link. [ ~ ] : Yes according to my knowledge but it needs development. [ ? ] : Unknown [ \u2717 ] : No according to my research. [ \u2713 ] : Yes [ \u2731 ] : Yes. But not specifically designed for it [ \u2717 ] : No Sensor support TODO Flight dynamics models Some simulators mostly focus on creating accurate dynamics for aerial vehicles. Here are some options: JSBSim ( https://github.com/JSBSim-Team/jsbsim ) YASim ( https://wiki.flightgear.org/YASim ) More to be added! Available UAV Models Each simulator typically offers a range of ready-to-use aerial vehicle models: Gazebo : https://app.gazebosim.org/search;q=uav Webots : https://webots.cloud/proto?keyword=robot%2Fflying Autopilot Suites Several autopilot suites provide instructions for using simulators, often with Software-in-the-Loop (SITL) or Hardware-in-the-Loop (HITL) options: Ardupilot : https://ardupilot.org/copter/docs/common-simulation.html Betaflight : https://betaflight.com/docs/development/SITL#sitl-in-realflight-9 Crazyflie : https://www.bitcraze.io/documentation/tutorials/getting-started-with-simulation/ DJI : https://www.dji.com/se/simulator Paparazzi UAV : https://wiki.paparazziuav.org/wiki/Simulation PX4 : https://docs.px4.io/main/en/simulation/#simulation ROSflight : https://docs.rosflight.org/v1.3/user-guide/gazebo_simulation/ This page was last updated: April 18, 2025","title":"Simulation of Aerial Robotics"},{"location":"simulation/#simulation-of-aerial-robotics","text":"Simulation is crucial when working with Unmanned Aerial Vehicles (UAVs). Testing different trajectories and control paradigms in a simulator before implementing them on the real platform ensures not only safety but also facilitates development. This page presents several simulator options for aerial robotics enthusiasts.","title":"Simulation of Aerial Robotics"},{"location":"simulation/#comparison","text":"The following simulators have their own integrated physics simulation and basic rendering capabilities. They are capable of simulating the aerodynamic forces necessary to keep UAVs airborne: For the following comparison, we have refered to this article: C. A. Dimmig et al., \"Survey of Simulators for Aerial Robots: An Overview and In-Depth Systematic Comparisons,\" in IEEE Robotics & Automation Magazine, doi: 10.1109/MRA.2024.3433171 The Arxiv prepint of the paper can be found here","title":"Comparison"},{"location":"simulation/#features","text":"List migh not be complete. If you see any error or missing components, feel free to open a PR or issue. Name Physics Engine Rendering Linux[^1] Windows[^1] MacOS[^1] Interface (S/H)ITL[^6] Active[^2] Hardware requirement[^3] Licence Open source[^4] Interest [^5] Gazebo ( RotorS , CrazyS , PX4 SITL ) ODE/ Bullet/ DART/ Simbody OGRE \u2713 ( \u2713 \u2713 \u2713 ) \u2731 ( \u2717 \u2717 \u2717) \u2713 ( \u2717 \u2717 \u2717 ) ROS 1/2, C++, RL PX4, ArduPilot, CF ^7 \u2713 ( \u2717 \u2731 \u2717 ) minimal/decent Apache 2.0 \u2713 High Gazebo Bullet/ DART/ TPE OGRE \u2713 \u2731 \u2713 ROS 1/2, C++, Python, RL PX4, ArduPilot, CF \u2713 minimal/decent Apache 2.0 \u2713 High Isaac ( Pegasus , Aerial Gym ) NVIDIA PhysX/ Flex Vulkan \u2713 \u2717 \u2717 ROS 1/2, Python, RL Pegasus: PX4 \u2713 high/demanding NVIDIA OMNIVERSE (BSD 3) \u2717 (\u2713 \u2713) User specific Webots ODE OpenGL \u2713 \u2713 \u2713 ROS 1/2, C/C++, Python, MATLAB, Java ArduPilot, CF \u2713 decent/high Apache 2.0 \u2713 Developing CoppeliaSim Bullet/ODE/Vortex/Newton/MuJoCo OpenGL \u2713 \u2713 \u2713 ROS 1/2, C/C++, Python, MATLAB, Java,Lua,Octave -- \u2713 decent/high GNU GPL/Commercial \u2731 Decent AIRsim NVIDIA PhysX Unreal,Unity \u2713 \u2713 \u2713 ROS 1, C++, Python, C#, Java,RL PX4, ArduPilot \u2717 medium/high MIT \u2713 Low Flightmare Ad hoc, Gazebo classic Unity \u2713 \u2717 \u2717 ROS 1, C++, RL -- \u2717 -- MIT \u2713 Low FlightGoggles Ad hoc Unity \u2713 \u2731 \u2717 ROS 1, C++ Motion capture \u2717 -- MIT \u2713 Unknown Gym-pybullet-drones Pybullet OpenGL \u2713 \u2731 \u2713 Python, RL Betaflight, CF \u2713 minimal/decent/high MIT (Pybullet: zlib ) \u2713 High RotorTM Ad hoc OpenGL \u2713 \u2717 \u2717 ROS 1, Python, MATLAB -- \u2713 -- GNU GPL \u2713 Unknown MATLAB UAV Toolbox MATLAB Unreal \u2713 \u2713 \u2713 ROS 2, MATLAB PX4 \u2713 -- Proprietary, Commercial \u2717 Unknown O3de NVIDIA PhysX/ NVIDIA Cloth/ AMD TressFX Atom \u2713 \u2713 \u2731 ROS 2[^8] , C++ unknown \u2713 decent/high Apache-2.0/MIT \u2713 Developing Drake ad hoc unknown \u2713 \u2717 \u2713 C++, Python, ROS 2 unknown \u2713 unknown BSD 3 \u2713 Developing Flightgear unknown unknown \u2713 \u2713 \u2713 C++ unknown \u2713 minimal/decent GNU-GPL \u2713 Low RealFlight unknown unknown \u2717 \u2713 \u2717 -- unknown \u2713 minimal/decent non-public \u2717 Low RotorPy ad hoc unknown \u2713 \u2713 \u2713 Python -- \u2713 minimal/decent MIT \u2713 Developing jMAVSim unkown Java3D \u2713 \u2713 \u2713 Java, UDP PX4 \u2713 minimal/decent BSD-3 \u2713 Low [^1]: \u2713: Full support, \u2731: Partial support, \u2717: No support [^2]: \u2713: Active and maintained, \u2731: Inactive but responding to issues/ PR, \u2717: Inactive for 2+ years [^3]: For a referance, a laptop running Intel i5 10th gen (or similar) with 8gb ddr4 ram and NVIDIA T100 4gb (or similar) are considered as minimal requirement. [^4]: \u2713: Yes, \u2731: Yes for non commercial use-case , \u2717: No [^5]: Usage in Aerial ROS/Robotics community according to several survey on Discourse and during the meetings. [^6]: (Software/Hardware) In The Loop [^8]: It seem under development and there is some docs out there.","title":"Features"},{"location":"simulation/#vehicle-types","text":"Simulator Multirotor (Basic) Multirotor (Drag) Multirotor (Wind) Fixed-wings Aerial Manipulators Swarms Cars Other vehicles Gazebo (Classic & New) \u2713 \u2713 \u2713 \u2713 \u2731 \u2731 \u2713 \u2713 Isaac (Pegasus, Aerial Gym) \u2713 \u2717(\u2713,\u2717) \u2717 \u2717 \u2717 \u2713 \u2713(\u2717,\u2717) \u2713(\u2717,\u2717) Webots \u2713 \u2717 \u2717 \u2717 \u2717 \u2731 \u2713 \u2713 CoppeliaSim \u2713 \u2713 \u2731 \u2717 \u2731 \u2731 \u2713 \u2713 AirSim \u2713 \u2713 \u2713 \u2717 \u2717 \u2731 \u2713 \u2717 Flightmare \u2713 \u2713 \u2717 \u2717 \u2717 \u2713 \u2717 \u2717 FlightGoggles \u2713 \u2713 \u2717 \u2717 \u2717 \u2717 \u2713 \u2717 gym-pybullet-drones \u2713 \u2713 \u2717 \u2717 \u2717 \u2713 \u2717 \u2717 RotorTM \u2713 \u2717 \u2717 \u2717 \u2713 \u2713 \u2717 \u2717 MATLAB UAV Toolbox \u2713 \u2713 \u2713 \u2713 \u2717 \u2731 \u2717 \u2717 O3de* ~ ? ? ? ? ? ~ ~ Drake* ? ? ? ? ? ? ? ? RotorPy* ~ ~ ~ \u2717 \u2717 ~ \u2717 \u2717 [ * ] : Unknown data. If you have information on specific topic, please comment bellow with the referance link. [ ~ ] : Yes according to my knowledge but it needs development. [ ? ] : Unknown [ \u2717 ] : No according to my research. [ \u2713 ] : Yes [ \u2731 ] : Yes. But not specifically designed for it [ \u2717 ] : No","title":"Vehicle types"},{"location":"simulation/#sensor-support","text":"TODO","title":"Sensor support"},{"location":"simulation/#flight-dynamics-models","text":"Some simulators mostly focus on creating accurate dynamics for aerial vehicles. Here are some options: JSBSim ( https://github.com/JSBSim-Team/jsbsim ) YASim ( https://wiki.flightgear.org/YASim ) More to be added!","title":"Flight dynamics models"},{"location":"simulation/#available-uav-models","text":"Each simulator typically offers a range of ready-to-use aerial vehicle models: Gazebo : https://app.gazebosim.org/search;q=uav Webots : https://webots.cloud/proto?keyword=robot%2Fflying","title":"Available UAV Models"},{"location":"simulation/#autopilot-suites","text":"Several autopilot suites provide instructions for using simulators, often with Software-in-the-Loop (SITL) or Hardware-in-the-Loop (HITL) options: Ardupilot : https://ardupilot.org/copter/docs/common-simulation.html Betaflight : https://betaflight.com/docs/development/SITL#sitl-in-realflight-9 Crazyflie : https://www.bitcraze.io/documentation/tutorials/getting-started-with-simulation/ DJI : https://www.dji.com/se/simulator Paparazzi UAV : https://wiki.paparazziuav.org/wiki/Simulation PX4 : https://docs.px4.io/main/en/simulation/#simulation ROSflight : https://docs.rosflight.org/v1.3/user-guide/gazebo_simulation/ This page was last updated: April 18, 2025","title":"Autopilot Suites"},{"location":"software/","text":"Software In aerial robotics, a UAV\u2019s software stack is typically divided into two subsystems: The Flight Control Firmware : embedded onboard the vehicle\u2014manages real-time sensor fusion, attitude stabilization and closed-loop flight control. The Ground Control Station (GCS) : running on the operator\u2019s workstation\u2014provides the human\u2013machine interface for mission planning, live telemetry monitoring, parameter tuning and post-flight analysis. Below, we list popular open-source flight control firmware and GCS packages along with their supported platforms. Flight Control Firmware Comparison of Open-Source Software (OSS) Flight Control Firmware. [1] Platform Latest Release OS Language License / FC / Doc / Config Tool Hack flight \u2014 None C++ GPL-3.0 / \u2013 / Lesser GPL-3.0 Cleanflight v2.5.0 Scheduler C GPL-3.0 / \u2013 / GPL-3.0 Betaflight v4.5.2 Scheduler C GPL-3.0 / \u2013 / GPL-3.0 INAV v8.0.1 Scheduler C GPL-3.0 / \u2013 / GPL-3.0 LibrePilot v16.09 FreeRTOS C GPL-3.0 / CC-BY-SA-3.0 / GPL-3.0 dRonin dRonin 2018-07-29 PiOS C GPL-3.0 / To be determined / \u2013 ArduPilot v4.5.7 ChibiOS / NuttX / Linux C/C++ GPL-3.0 / CC-BY-SA-3.0 / GPL-3.0 PX4 v1.15.4 NuttX C/C++ BSD 2-Clause / CC-BY-SA-3.0 / GPL-3.0 Paparazzi v6.4.0 ChibiOS / Scheduler C/Python GPL-3.0 / GFDL / GPL-3.0 DJI Onboard SDK (OSDK) (EOL) v4.1.0 Linux / RTOS C/C++ MIT DJI Payload SDK (PSDK) v3.11.1 Linux / RTOS C MIT ROSflight v1.3.0 Linux C BSD 3-Clause Crazyflie Firmware v2025.02 Linux C GPL-3.0 Notes: - EOL = End of Life Service. Ground Control Stations (GCS) Comparison of GCS software and their supported platforms. [2] GCS Lastest Release Supported Platforms OS (L/W/M) Protocol(s) Language / Framework License Mission Planner v1.3.82 ArduPilot \u2715/\u2713/\u2713 MAVLink .NET / C# GPL-3.0-only APM Planner 2 v2.0.30-rc3 ArduPilot, PX4 \u2713/\u2713/\u2713 MAVLink Qt / C++ GPL-3.0-or-later MAVProxy v1.8.71 ArduPilot \u2713/\u2715/\u2715 MAVLink Python GPL-3.0-or-later AndroPilot v1.9.14 ArduPilot \u2715/\u2715/\u2715 MAVLink Java GPL-3.0-only QGroundControl v4.4.4 ArduPilot, PX4 \u2713/\u2713/\u2713 MAVLink Qt / C++ Apache-2.0 / GPL-3.0-only Paparazzi Center v6.4.0 Paparazzi \u2713/\u2713/\u2713 PprzLink Python GPL-2.0-only LibrePilot GCS v16.09 LibrePilot \u2713/\u2713/\u2713 UAVTalk C++ / Qt GPL-3.0-only Betaflight-Configurator v10.10.0 Betaflight \u2713/\u2713/\u2713 MSP, MAVLink Electron / JavaScript GPL-3.0-only iNAV-Configurator v8.0.1 iNAV \u2713/\u2713/\u2713 MSP, MAVLink Electron / JavaScript GPL-3.0-only Notes: - Order for OS is Linux/Windows/macOS, with \u2713 = supported, \u25d0 = partial, \u2715 = not supported. - AndroPilot is Android-only, hence \u2715/\u2715/\u2715 here. - All other entries match their official supported OS lists. References Ebeid, E., Skriver, M., Terkildsen, K.H., Jensen, K. and Schultz, U.P. (2018) A Survey of Open-Source UAV Flight Controllers and Flight Simulators. Microprocessors and Microsystems, 61, 11-20. https://doi.org/10.1016/j.micpro.2018.05.002. Aliane, N. (2024). A Survey of Open-Source UAV Autopilots. Electronics, 13(23), 4785. https://doi.org/10.3390/electronics13234785. This page was last updated: May 20, 2025","title":"Software"},{"location":"software/#software","text":"In aerial robotics, a UAV\u2019s software stack is typically divided into two subsystems: The Flight Control Firmware : embedded onboard the vehicle\u2014manages real-time sensor fusion, attitude stabilization and closed-loop flight control. The Ground Control Station (GCS) : running on the operator\u2019s workstation\u2014provides the human\u2013machine interface for mission planning, live telemetry monitoring, parameter tuning and post-flight analysis. Below, we list popular open-source flight control firmware and GCS packages along with their supported platforms.","title":"Software"},{"location":"software/#flight-control-firmware","text":"Comparison of Open-Source Software (OSS) Flight Control Firmware. [1] Platform Latest Release OS Language License / FC / Doc / Config Tool Hack flight \u2014 None C++ GPL-3.0 / \u2013 / Lesser GPL-3.0 Cleanflight v2.5.0 Scheduler C GPL-3.0 / \u2013 / GPL-3.0 Betaflight v4.5.2 Scheduler C GPL-3.0 / \u2013 / GPL-3.0 INAV v8.0.1 Scheduler C GPL-3.0 / \u2013 / GPL-3.0 LibrePilot v16.09 FreeRTOS C GPL-3.0 / CC-BY-SA-3.0 / GPL-3.0 dRonin dRonin 2018-07-29 PiOS C GPL-3.0 / To be determined / \u2013 ArduPilot v4.5.7 ChibiOS / NuttX / Linux C/C++ GPL-3.0 / CC-BY-SA-3.0 / GPL-3.0 PX4 v1.15.4 NuttX C/C++ BSD 2-Clause / CC-BY-SA-3.0 / GPL-3.0 Paparazzi v6.4.0 ChibiOS / Scheduler C/Python GPL-3.0 / GFDL / GPL-3.0 DJI Onboard SDK (OSDK) (EOL) v4.1.0 Linux / RTOS C/C++ MIT DJI Payload SDK (PSDK) v3.11.1 Linux / RTOS C MIT ROSflight v1.3.0 Linux C BSD 3-Clause Crazyflie Firmware v2025.02 Linux C GPL-3.0 Notes: - EOL = End of Life Service.","title":"Flight Control Firmware"},{"location":"software/#ground-control-stations-gcs","text":"Comparison of GCS software and their supported platforms. [2] GCS Lastest Release Supported Platforms OS (L/W/M) Protocol(s) Language / Framework License Mission Planner v1.3.82 ArduPilot \u2715/\u2713/\u2713 MAVLink .NET / C# GPL-3.0-only APM Planner 2 v2.0.30-rc3 ArduPilot, PX4 \u2713/\u2713/\u2713 MAVLink Qt / C++ GPL-3.0-or-later MAVProxy v1.8.71 ArduPilot \u2713/\u2715/\u2715 MAVLink Python GPL-3.0-or-later AndroPilot v1.9.14 ArduPilot \u2715/\u2715/\u2715 MAVLink Java GPL-3.0-only QGroundControl v4.4.4 ArduPilot, PX4 \u2713/\u2713/\u2713 MAVLink Qt / C++ Apache-2.0 / GPL-3.0-only Paparazzi Center v6.4.0 Paparazzi \u2713/\u2713/\u2713 PprzLink Python GPL-2.0-only LibrePilot GCS v16.09 LibrePilot \u2713/\u2713/\u2713 UAVTalk C++ / Qt GPL-3.0-only Betaflight-Configurator v10.10.0 Betaflight \u2713/\u2713/\u2713 MSP, MAVLink Electron / JavaScript GPL-3.0-only iNAV-Configurator v8.0.1 iNAV \u2713/\u2713/\u2713 MSP, MAVLink Electron / JavaScript GPL-3.0-only Notes: - Order for OS is Linux/Windows/macOS, with \u2713 = supported, \u25d0 = partial, \u2715 = not supported. - AndroPilot is Android-only, hence \u2715/\u2715/\u2715 here. - All other entries match their official supported OS lists.","title":"Ground Control Stations (GCS)"},{"location":"software/#references","text":"Ebeid, E., Skriver, M., Terkildsen, K.H., Jensen, K. and Schultz, U.P. (2018) A Survey of Open-Source UAV Flight Controllers and Flight Simulators. Microprocessors and Microsystems, 61, 11-20. https://doi.org/10.1016/j.micpro.2018.05.002. Aliane, N. (2024). A Survey of Open-Source UAV Autopilots. Electronics, 13(23), 4785. https://doi.org/10.3390/electronics13234785. This page was last updated: May 20, 2025","title":"References"}]}